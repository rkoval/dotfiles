snippet new-promise
alias Promise
options word
  new Promise((resolve, reject) => {
    ${0:TARGET}
  });

snippet cdm
  componentDidMount() {
    ${1}
  }
snippet cdup
  componentDidUpdate(prevProps, prevState) {
    ${1}
  }
snippet cwm
  componentWillMount() {
    ${1}
  }
snippet cwr
  componentWillReceiveProps(nextProps) {
    ${1}
  }
snippet cwun
  componentWillUnmount() {
    ${1}
  }
snippet cwu
  componentWillUpdate(nextProps, nextState) {
    ${1}
  }
snippet gdp
  getDefaultProps() {
    return {
      ${1}
    };
  }
snippet pt
  propTypes: {
    ${1}: React.PropTypes.${2:string}
  }

snippet rcc
  import React, { PropTypes, Component } from 'react';

  class ${1:ClassName} extends Component {

    render() {
      return (
        ${0:<div />}
      );
    }
  }

  $1.propTypes = {

  };

  export default $1;
snippet cc
  class _${1:ClassName} extends Component {
    render() {
      return (
        ${0:<div />}
      )
    }
  }

  export const $1 = _$1
snippet slc
  const ${1:ClassName} = (props) => {
    return (
      ${0:<div />}
    );
  };

  $1.propTypes = {

  };
snippet rslc
  import React, { PropTypes } from 'react';

  const ${1:ClassName} = (props) => {
    return (
      ${0:<div />}
    );
  }

  $1.propTypes = {

  };

  export default $1;
snippet ren
  render() {
    return (
      ${1:<div />}
    );
  }
snippet scu
  shouldComponentUpdate(nextProps, nextState) {
    ${1}
  }
snippet props
  this.props.${1}
snippet state
  this.state.${1}

snippet     importimmutable
abbr        impimm
options     head
    import Immutable from 'immutable';
